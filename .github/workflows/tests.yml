name: tests

on: [push, pull_request]

jobs:
  test-docs:
    runs-on: ubuntu-latest
    steps:
        - name: Set up Python 3.7
          uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Install package from repository with docs dependencies
          run: |
            pip install -e .[docs]

        - name: List pip packages
          run: |
            pip -V
            pip list

        - name: Build docs
          run: |
            cd doc
            make html

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9']
    env:
      DISPLAY: ':99.0'
      XDG_RUNTIME_DIR: /tmp/runtime-runner
    steps:
        - name: Set up virtual framebuffer (xvfb) for Qt GUI testing
          # https://pytest-qt.readthedocs.io/en/latest/troubleshooting.html#github-actions
          run: |
            sudo apt-get install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
            /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Install package from repository with test dependencies
          run: |
            pip install -e .[tests]

        - name: List pip packages
          run: |
            pip -V
            pip list

        - name: Run tests
          run: |
            nosetests --with-coverage --cover-package=ephyviewer

        - name: Report coverage to Coveralls
          run: coveralls
          env:
            COVERALLS_SERVICE_NAME: github
            COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            COVERALLS_FLAG_NAME: test-linux-${{ matrix.python-version }}
            COVERALLS_PARALLEL: true

  coveralls:
    name: Finish Coveralls
    needs: test-linux
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finish Coveralls
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish
      env:
        COVERALLS_SERVICE_NAME: github
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
